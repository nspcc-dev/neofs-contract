name: Go

on:
  pull_request:
    branches: [ master ]

jobs:
  lint:
    name: Lint
    uses: nspcc-dev/.github/.github/workflows/go-linter.yml@master

  tests:
    name: Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go: [ '1.22', '1.23' ]
        os: [ubuntu-latest, windows-2022, macos-14]
        exclude:
          # Only latest Go version for Windows and MacOS.
          - os: windows-2022
            go: '1.22'
          - os: macos-14
            go: '1.22'
      fail-fast: false
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '${{ matrix.go }}'

    - name: Test
      run: go test -v ./...

  cover:
    name: Coverage
    runs-on: ubuntu-latest

    env:
      CGO_ENABLED: 0
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true

      - name: Write coverage profile
        run: go test -v ./... -coverprofile=./coverage.txt -coverpkg=./contracts/...

      - name: Upload coverage results to Codecov
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true # if something is wrong on uploading codecov results, then this job will fail
          files: ./coverage.txt
          slug: nspcc-dev/neofs-contract
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

  build:
    name: Build contracts and RPC bindings
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go_versions: [ '1.22', '1.23' ]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '${{ matrix.go_versions }}'

      - name: Clear built RPC bindings
        run: make clean

      - name: Compile contracts and build RPC bindings
        run: make build

      - name: Check that committed RPC bindings match generated ones
        run: |
          if [[ $(git diff --name-only | grep '^rpc/*' -c) != 0 ]]; then
          echo "Fresh version of RPC bindings should be committed for the following contracts:";
          git diff --name-only;
          exit 1;
          fi

      - name: Check that committed binary contracts match generated ones
        run: |
          if [[ $(git diff --name-only | grep '^contracts/*' -c) != 0 ]]; then
          echo "Fresh version of binaries/manifests should be committed for the following contracts:";
          git diff --name-only;
          exit 1;
          fi
